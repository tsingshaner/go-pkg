# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  MODS: [color, errors, log, oss, util]

env:
  GO111MODULE: on
  GOPROXY: https://goproxy.cn,direct

includes:
  color:
    dir: ./color
    taskfile: ./color/taskfile.yml

  errors:
    dir: ./errors
    taskfile: ./errors/taskfile.yml

  log:
    dir: ./log
    taskfile: ./log/taskfile.yml

  oss:
    dir: ./oss
    taskfile: ./oss/taskfile.yml

  _:
    dir: ./internal
    taskfile: ./internal/taskfile.yml

tasks:
  default:
    desc: show help
    cmds:
      - go version
      - task --version
      - task --list-all

  githooks:
    desc: setup git hooks
    cmd: git config core.hooksPath ./internal/githooks

  setup:
    desc: setup project
    cmds:
      - task: githooks
      - go mod download

  tidy:
    desc: go mod tidy for all sub packages
    deps:
      - for: { var: MODS }
        task: _tidy
        vars: { MOD: "{{.ITEM}}" }
    cmd: go work sync
  _tidy:
    internal: true
    dir: "./{{.MOD}}"
    cmd: go mod tidy

  cov:
    desc: gen test coverages
    deps:
      - task: _:integration
      - for: { var: MODS }
        task: _cov
        vars: { MOD: "{{.ITEM}}" }
    cmd:
      task: cov:merge
  _cov:
    internal: true
    vars:
      COV_OUT: ./coverage/cov_unit.txt
    cmds:
      - cmd: powershell New-Item -ItemType Directory -Force -Path ./{{.MOD}}/coverage
        platforms: [windows]
      - cmd: mkdir -p ./{{.MOD}}/coverage
        platforms: [linux, darwin]
      - go test -coverprofile=./{{.MOD}}/{{.COV_OUT}} -covermode=atomic ./{{.MOD}}/...

  cov:merge:
    desc: merge coverage
    vars:
      COV_OUT: coverage/cov_unit.txt
      ALL_OUT: coverage/coverage.out
    cmds:
      - cmd: powershell ./scripts/merge_unit_cov.ps1 -Mods '"{{.MODS}}"' -TotalCoverageOut {{.ALL_OUT}} -ModCoverageOut {{.COV_OUT}}
        platforms: [windows]
      - cmd: bash ./scripts/merge_unit_cov.sh "{{.MODS}}" {{.ALL_OUT}} {{.COV_OUT}}
        platforms: [linux, darwin]

  cov:preview:
    desc: preview coverage report
    deps:
      - task: cov
    cmd: go tool cover -html=./coverage/coverage.out -o ./coverage/cov.html

  unit:
    desc: run all unit tests
    deps:
      - for: { var: MODS }
        task: _unit
        vars: { MOD: "{{.ITEM}}" }
  _unit:
    internal: true
    dir: "./{{.MOD}}"
    cmd: go test -v ./...
